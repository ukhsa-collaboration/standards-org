name: Validate, build, and push dev container

on:
  workflow_dispatch:
  push:
#    paths:
#      - Dockerfile
#      - 'docs/**'
#      - 'src/**'
#      - eleventy.config.js
#      - package.json
#      - .hadolint.yaml

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ukhsa-collaboration/standards-org

jobs:
  # this job always runs on every push which meets the on conditions above
  check-image:
    name: Validate the image definition
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Lint Dockerfile
        run: docker run --rm -i -v './.hadolint.yaml:/.hadolint.yaml' hadolint/hadolint < Dockerfile

      - name: Validate build configuration
        uses: docker/build-push-action@v6
        with:
          call: check

  build-image:
    name: Build the image and push to GHCR
#    if: github.ref == 'refs/heads/main'
    needs: check-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          # tag this specific build based on the commit that created it, and update latest tag
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
