name: Publish Standards
on:
  workflow_dispatch:
    inputs:
      upstream_repo:
        description: Source repository that triggered the publish
        required: true
        default: ukhsa-collaboration/standards-org
        type: choice
        options:
          - ukhsa-collaboration/standards-org
          - ukhsa-collaboration/standards-api
          - ukhsa-collaboration/standards-development
      upstream_sha:
        description: Commit SHA in the triggering repository
        type: string
      hmac_body:
        description: HMAC body (repo|sha|timestamp)
        type: string
      hmac_sig:
        description: HMAC signature (hex)
        type: string
  push:
    paths:
      - 'docs/**'
      - 'src/**'
      - eleventy.config.js
    branches:
      - main

concurrency:
  group: publish-site
  cancel-in-progress: true

env:
  MAX_AGE_SECONDS: "600"

jobs:

  validate:
    name: Validate trigger
    runs-on: ubuntu-latest

    permissions:
      actions: read

    steps:
    - name: Validate required dispatch inputs
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.upstream_repo != 'ukhsa-collaboration/standards-org'
      run: |
        err=0
        [ -n "${{ github.event.inputs.upstream_sha }}" ] || { echo "Missing required input: upstream_sha"; err=1; }
        [ -n "${{ github.event.inputs.hmac_body }}" ] || { echo "Missing required input: hmac_body"; err=1; }
        [ -n "${{ github.event.inputs.hmac_sig }}" ] || { echo "Missing required input: hmac_sig"; err=1; }
        if [ $err -ne 0 ]; then
          exit 1
        fi
        echo "All required workflow_dispatch inputs are present"

    - name: Verify HMAC & freshness
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.upstream_repo != 'ukhsa-collaboration/standards-org'
      env:
        SHARED_HMAC_KEY: ${{ secrets.UKHSA_STANDARDS_PUBLISH_DISPATCH_SHARED_HMAC_KEY }}
        BODY: ${{ github.event.inputs.hmac_body }}
        SIG: ${{ github.event.inputs.hmac_sig }}
        MAX_AGE: ${{ env.MAX_AGE_SECONDS }}
        EXPECTED_REPO: ${{ github.event.inputs.upstream_repo }}
        EXPECTED_SHA: ${{ github.event.inputs.upstream_sha }}
      run: |
        if [ -z "$SHARED_HMAC_KEY" ]; then
          echo "Missing SHARED_HMAC_KEY secret"; exit 1
        fi

        calc=$(printf "%s" "$BODY" | openssl dgst -sha256 -hmac "$SHARED_HMAC_KEY" | sed 's/^.* //')
        if [ "$calc" != "$SIG" ]; then
          echo "HMAC mismatch"; exit 1
        fi

        IFS='|' read -r repo sha ts <<< "$BODY"
        if [ "$repo" != "$EXPECTED_REPO" ] || [ "$sha" != "$EXPECTED_SHA" ]; then
          echo "Body fields do not match provided inputs"; exit 1
        fi

        now=$(date -u +%s)
        age=$(( now - ts ))
        if [ $age -gt $MAX_AGE ]; then
          echo "Payload too old ($age s)"; exit 1
        fi

        echo "Valid trigger from $repo at $sha (age ${age}s)"

  build-documentation:
    name: Build Documentation
    needs: validate
    if: github.ref == 'refs/heads/main'
    # Grant GITHUB_TOKEN the permissions required to make get git provenance when building docs
    permissions:
      contents: read    # to read git committers

    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Configure Git Credentials
      run: |
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com

    - name: Use Node.js LTS
      uses: actions/setup-node@v5
      with:
        node-version: '22.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm i

    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

    - uses: actions/cache@v4
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Publish docs
      run: |
        npm run fetch
        npm run build

    - name: Upload build
      uses: actions/upload-pages-artifact@v4
      with:
        path: _site

  publish-gh-pages:
    needs: build-documentation
    name: Publish Standards To Github Pages

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
